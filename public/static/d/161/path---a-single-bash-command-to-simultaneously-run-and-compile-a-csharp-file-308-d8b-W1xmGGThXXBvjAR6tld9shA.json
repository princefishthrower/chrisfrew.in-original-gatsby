{"data":{"site":{"siteMetadata":{"title":"Chris Frewin's Full Stack Blog.","author":"Chris Frewin"}},"markdownRemark":{"id":"c9dbc8de-e9cf-5d19-a100-e2515e53c350","excerpt":"Background: 2019 Advent of Code and Microsoft Troubles I‚Äôve started the  2019 Advent of Code  for this December! (This will be my first one‚Ä¶","html":"<h2>Background: 2019 Advent of Code and Microsoft Troubles</h2>\n<p>I‚Äôve started the <a href=\"https://adventofcode.com/\">2019 Advent of Code</a> for this December! (This will be my first one - don‚Äôt know how I‚Äôve missed it in previous years!) Anyway, to get better at C#, which I may be using in the future for work, I decided to do all the Advent challenges in C#. </p>\n<p>That‚Äôs when I realized I didn‚Äôt know how to simply ‚Äúrun‚Äù a .cs script. With Python scripts we can simply use <code class=\"language-text\">python</code>, with Perl we have <code class=\"language-text\">perl</code>, and so on. </p>\n<p>Of course anything to do with Microsoft is <em>never</em> straightforward üôÑ. Up till now, I had always just sat back complacently and let Visual Studio run the code for me simply via the ‚Äòrun‚Äô button. But for these fun Advent scripts, I decided to just keep it simple with Visual Studio Code. </p>\n<h2>The Bash Alias</h2>\n<p>I wanted a simple way to simultaneously compile <em>and</em> run my C# scripts, saving me from having to issue giant, or worse, <em>multiple</em> Bash commands each time.</p>\n<p>To achieve such a behavior we need just a few simple steps:</p>\n<ol>\n<li>First, we must allow our bash function to accept a single argument: the filename of the desired <code class=\"language-text\">.cs</code> file to compile and run.</li>\n<li>Compile that passed .cs file using <code class=\"language-text\">csc</code>, while also using the <code class=\"language-text\">-nologo</code> flag to suppress the annoying copyright and info that is normally posted.</li>\n<li>Execute the .exe file generated by <code class=\"language-text\">csc</code>.</li>\n</ol>\n<p>Steps 2 and 3 will need to parse the filename argument separately such that <code class=\"language-text\">csc</code> operates on the <code class=\"language-text\">.cs</code> file, and <code class=\"language-text\">mono</code> operates on the generated <code class=\"language-text\">.exe</code> file. </p>\n<p>I named my alias simply <code class=\"language-text\">cs</code>, since it will be used for .cs files exclusively. Here it is in its full 6 lines of glory:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># usage: cs &lt;&lt;FileName.cs>></span>\n<span class=\"token comment\"># output: any stdout as well as any effects produced from the executing the compiled C# script</span>\n<span class=\"token keyword\">function</span> cs<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    csc -nologo <span class=\"token string\">\"<span class=\"token variable\">${1%%.*}</span>\"</span>.cs<span class=\"token punctuation\">;</span>\n    mono <span class=\"token string\">\"<span class=\"token variable\">${1%%.*}</span>\"</span>.exe<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I haven‚Äôt tested it too extensively, but it‚Äôs working for me as long as the script to be compiled has a <code class=\"language-text\">static main</code> method. (I think <code class=\"language-text\">csc</code> warns you or throws an error otherwise). Go ahead and copy that into your <code class=\"language-text\">.profile</code>, <code class=\"language-text\">.bashrc</code>, or similar, and get rippin‚Äô with C# scripts!</p>\n<p>-Cheers! üç∫</p>\n<p>Chris</p>","frontmatter":{"title":"A Single Bash Command To Simultaneously Run and Compile a CSharp (.cs) File","date":"December 05, 2019","draft":false,"starID":12345,"postType":"dev"}}},"pageContext":{"slug":"/a-single-bash-command-to-simultaneously-run-and-compile-a-csharp-file/","prev":{"fields":{"slug":"/nlp-champs-is-dead-long-live-nlp-champs/"},"frontmatter":{"date":"18 October, 2019","title":"NLP Champs is Dead, Long Live NLP Champs","draft":false,"starID":1234,"postType":"misc","link":"https://chrisfrew.in/nlp-champs-is-dead-long-live-nlp-champs/","relativeLink":"/nlp-champs-is-dead-long-live-nlp-champs/"}},"next":{"fields":{"slug":"/goals-for-2020/"},"frontmatter":{"date":"01 January, 2020","title":"Goals For 2020","draft":false,"starID":456789,"postType":"misc","link":"https://chrisfrew.in/goals-for-2020/","relativeLink":"/goals-for-2020/"}}}}